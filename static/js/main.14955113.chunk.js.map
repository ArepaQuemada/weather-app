{"version":3,"sources":["Components/About.js","Components/BigWeatherCard.js","Components/WeatherCard.js","Components/ViewCard.js","Components/ErrorModal.js","Components/Form.js","Components/HomePage.js","Components/Body.js","Components/Header.js","App.js","index.js"],"names":["Abount","useStyles","makeStyles","root","minWidth","display","flexDirection","justifyContent","alignItems","textAlign","backgroundColor","color","content","width","icon","fontSize","marginTop","marginBottom","container","flexGrow","description","textTransform","BigWeatherCard","country","city","weather","classes","main","humidity","temp","temp_max","temp_min","feels_like","iconClass","icons","Card","variant","className","CardContent","Typography","component","Grid","item","xs","theme","days","fontWeight","WeatherCard","dt_txt","day","dateFormat","size","ViewCard","data","isActive","useMediaQuery","weatherArray","name","parsedData","Array","from","Set","list","map","substring","date","find","length","pop","spacing","elem","index","key","header","ErrorModal","open","onClose","Dialog","DialogTitle","DialogContent","DialogContentText","formStyle","Form","setCity","inputRef","useRef","onSubmit","ev","preventDefault","value","current","childNodes","FormControl","style","InputLabel","htmlFor","Input","id","aria-describedby","ref","endAdornment","InputAdornment","position","FormHelperText","Button","type","maxWidth","spinner","HomePage","useState","setData","showSpinner","setShowSpinner","error","setError","setOpen","API_KEY","HOST","useEffect","console","log","a","URL","axios","get","fetchedData","fetchData","justify","CircularProgress","margin","Body","Box","menuButton","marginRight","title","link","textDecoration","font","Header","AppBar","Toolbar","edge","to","path","exact","App","createMuiTheme","palette","primary","secondary","default","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"wOAEe,SAASA,IACpB,OACI,sC,iFCAFC,EAAYC,YAAW,CACzBC,KAAM,CACFC,SAAU,IACVC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,UAAW,SACXC,gBAAiB,UACjBC,MAAO,WAEXC,QAAS,CACLC,MAAO,OAEXC,KAAM,CACFC,SAAU,GACVC,UAAW,OACXC,aAAc,QAElBC,UAAW,CACPC,SAAU,GAEdC,YAAa,CACTC,cAAe,gBAIR,SAASC,EAAT,GAAsD,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAE/CC,EAAUzB,IAFgD,EAGkDwB,GAAW,GAH7D,IAGxDE,KAAQC,GAHgD,aAGI,GAHJ,GAGhDA,SAAUC,EAHsC,EAGtCA,KAAMC,EAHgC,EAGhCA,SAAUC,EAHsB,EAGtBA,SAAUC,EAHY,EAGZA,WAHY,IAGQP,QAHR,aAG2C,GAH3C,4BAGoBL,EAHpB,EAGoBA,YAAaN,EAHjC,EAGiCA,KAC3FmB,GAAaC,EAAMpB,IAAS,IAAIA,KAEtC,OACI,kBAACqB,EAAA,EAAD,CAAMC,QAAQ,WAAWC,UAAWX,EAAQvB,MACxC,kBAACmC,EAAA,EAAD,CAAaD,UAAWX,EAAQd,SAC5B,kBAAC2B,EAAA,EAAD,CAAYH,QAAQ,KAAKI,UAAU,MAC9BhB,EADL,MACcD,GAEd,kBAACgB,EAAA,EAAD,CAAYH,QAAQ,KAAKI,UAAU,MAC9BX,EADL,QAGA,kBAACU,EAAA,EAAD,CAAY5B,MAAM,WACd,uBAAG0B,UAAS,aAAQJ,EAAR,YAAqBP,EAAQZ,SAE7C,kBAACyB,EAAA,EAAD,CAAYH,QAAQ,SACfN,EADL,UACmBC,EADnB,QAGA,kBAACQ,EAAA,EAAD,CAAYF,UAAWX,EAAQN,aAC1BA,GAEL,kBAACqB,EAAA,EAAD,CAAMvB,WAAS,EAACmB,UAAWX,EAAQR,WAC/B,kBAACuB,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACJ,EAAA,EAAD,kBACeX,EADf,MAIJ,kBAACa,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GACX,kBAACJ,EAAA,EAAD,oBACiBP,EADjB,Y,qBCzDlB/B,EAAYC,aAAW,SAAA0C,GAAK,MAAK,CACnCzC,KAAM,CACFC,SAAU,IACVC,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,SACZC,UAAW,SACXC,gBAAiB,UACjBC,MAAO,WAEXG,KAAM,CACFC,SAAU,IAEd8B,KAAM,CACFC,WAAY,QAEhB1B,YAAa,CACTC,cAAe,kBAIR,SAAS0B,EAAT,GAAoC,IAAD,IAAXtB,SAEuD,GAAlFuB,EAFsC,EAEtCA,OAFsC,IAE9BrB,KAAQE,GAFsB,aAEb,GAFa,GAEtBA,KAFsB,IAETJ,QAFS,aAE0B,GAF1B,4BAEGL,EAFH,EAEGA,YAAaN,EAFhB,EAEgBA,KACxDY,EAAUzB,IACVgC,GAAaC,EAAMpB,IAAS,IAAIA,KAChCmC,EAAMC,IAAWF,EAAQ,QAE/B,OACI,kBAACb,EAAA,EAAD,CAAMxB,MAAM,aACR,kBAAC2B,EAAA,EAAD,CAAaD,UAAWX,EAAQvB,MAC5B,kBAACoC,EAAA,EAAD,CAAYF,UAAWX,EAAQmB,MAC1BI,GAEL,kBAACV,EAAA,EAAD,CAAY5B,MAAM,WACd,uBAAG0B,UAAS,aAAQJ,EAAR,YAAqBP,EAAQZ,SAE7C,kBAACyB,EAAA,EAAD,CAAYH,QAAQ,KAAKI,UAAU,MAC9BX,EADL,QAGA,kBAACU,EAAA,EAAD,CAAYF,UAAWX,EAAQN,aAC1BA,KC1CrB,IAAMnB,EAAYC,aAAW,SAAA0C,GAAK,MAAK,CACnCzC,KAAM,CACFgB,SAAU,GAEdgC,KAAM,MAGK,SAASC,EAAT,GAA6B,IAATC,EAAQ,EAARA,KAEzB3B,EAAUzB,IACVqD,EAAWC,YAAc,sBACpB7B,EAAQyB,KAAnBG,EAA0B,EAAmB,EAJN,IAMnCE,EANmC,GAKYH,GAAQ,IAAnD7B,KAL+B,gBAKK,GALL,GAKvBD,eALuB,MAKb,GALa,MAKTkC,YALS,MAKF,GALE,EAQvC,GAAIJ,EAAM,CACN,IAAMK,EAAaC,MAAMC,KAAK,IAAIC,IAAIR,EAAKS,KAAKC,KAAI,SAAArB,GAAI,OAAIA,EAAKM,OAAOgB,UAAU,EAAG,SAChFD,KAAI,SAAAE,GACD,OAAOZ,EAAKS,KAAKI,MAAK,SAAAxB,GAAI,OAAIA,EAAKM,OAAOgB,UAAU,EAAG,MAAQC,QAEnEP,EAAWS,OAAS,GACpBT,EAAWU,MAEfZ,EAAeE,EAGnB,OACI,kBAACjB,EAAA,EAAD,CAAMvB,WAAS,EAACmB,UAAWX,EAAQvB,KAAMkE,QAAS,GAC7Cb,EAAeA,EAAaO,KAAI,SAACO,EAAMC,GACpC,OAAiB,IAAVA,EACH,kBAAC9B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAI6B,IAAKD,GACpB,kBAACjD,EAAD,CACIE,KAAMiC,EACNlC,QAASA,EACTE,QAAS6C,KAIjB,kBAAC7B,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAIjB,EAAQyB,KAAMqB,IAAKD,GAC9B,kBAACxB,EAAD,CACItB,QAAS6C,QAKrB,+B,yDC9CVrE,EAAYC,aAAW,SAAA0C,GAAK,MAAK,CACnC6B,OAAQ,CACJpE,QAAS,OACTG,WAAY,SACZD,eAAgB,SAChBG,gBAAiB,eAIV,SAASgE,EAAT,GAAwC,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAEjClD,EAAUzB,IAMhB,OACI,kBAAC4E,EAAA,EAAD,CAAQD,QALQ,WAChBA,KAI8BD,KAAMA,GAChC,kBAACG,EAAA,EAAD,CAAazC,UAAWX,EAAQ+C,QAC5B,kBAAC,IAAD,CAAa1D,SAAS,WAE1B,kBAACgE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,+DAGA,kBAACA,EAAA,EAAD,oC,2EC1BVC,EAAY,CACdpE,MAAO,QAGI,SAASqE,EAAT,GAA4B,IAAZC,EAAW,EAAXA,QAErBC,EAAWC,iBAAO,MAQxB,OACI,0BAAMC,SAPW,SAACC,GAClBA,EAAGC,iBADsB,IAEfC,EAFe,YAEHL,EAASM,QAAQC,WAFd,MAEfF,MACVN,EAAQM,KAKJ,kBAACG,EAAA,EAAD,CAAaC,MAAOZ,GAChB,kBAACa,EAAA,EAAD,CAAYC,QAAQ,YAApB,aACA,kBAACC,EAAA,EAAD,CACIC,GAAG,WACHC,mBAAiB,iBACjBvF,MAAM,YACNwF,IAAKf,EACLgB,aACI,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACrB,kBAAC,IAAD,SAGZ,kBAACC,EAAA,EAAD,CAAgBN,GAAG,kBAAnB,gBACA,kBAACO,EAAA,EAAD,CAAQpE,QAAQ,YAAYzB,MAAM,UAAU8F,KAAK,UAAjD,Y,qBCzBVxG,EAAYC,aAAW,SAAC0C,GAAD,MAAY,CACrCzC,KAAM,CACFgB,SAAU,EACVuF,SAAU,KAEdC,QAAS,CACLtG,QAAS,OACTE,eAAgB,cAIT,SAASqG,IAEpB,IAAMlF,EAAUzB,IAFe,EAIP4G,qBAJO,mBAIxBrF,EAJwB,KAIlB2D,EAJkB,OAKP0B,qBALO,mBAKxBxD,EALwB,KAKlByD,EALkB,OAMOD,oBAAS,GANhB,mBAMxBE,EANwB,KAMXC,EANW,OAOLH,oBAAS,GAPJ,mBAOxBI,EAPwB,KAOjBC,EAPiB,OAQPL,oBAAS,GARF,mBAQxBlC,EARwB,KAQlBwC,EARkB,KASzBC,EAAU,mCACVC,EAAO,iCA+Bb,OAzBAC,qBAAU,WACNC,QAAQC,IAAI,aAGhBF,qBAAU,WAAM,4CACZ,8BAAAG,EAAA,sEAEQT,GAAe,GACTU,EAHd,UAGuBL,EAHvB,gCAGmD7F,EAHnD,+BAG8E4F,GAH9E,SAIkCO,IAAMC,IAAIF,GAJ5C,OAIcG,EAJd,OAKQf,EAAQe,EAAYxE,MACpB6D,GAAS,GANjB,kDAQQA,GAAS,GACTC,GAAQ,GAThB,yBAWQH,GAAe,GACf7B,EAAQ,IAZhB,8EADY,sBAgBR3D,GAhBS,WAAD,wBAiBRsG,KAEL,CAACtG,IAGA,yBAAKa,UAAWX,EAAQvB,MACpB,kBAACsC,EAAA,EAAD,CAAMvB,WAAS,EAACmD,QAAS,EAAG0D,QAAQ,SAASvH,WAAW,UACpD,kBAACiC,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,IACX,kBAACuC,EAAD,CAAMC,QAASA,KAElB4B,EACG,kBAACtE,EAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,GAAIN,UAAWX,EAAQiF,SAClC,kBAACqB,EAAA,EAAD,CAAkBrH,MAAM,aAE1BsG,EACE,kBAACvC,EAAD,CACIC,KAAMA,EACNC,QA1CJ,WAChBuC,GAAQ,MA4CQ,kBAAC/D,EAAD,CACIC,KAAMA,EACN3B,QAASA,M,aCzE/BzB,EAAYC,aAAW,SAAC0C,GAAD,MAAY,CACrCzC,KAAM,CACF8H,OAAQ,WAID,SAASC,KACpB,IAAMxG,EAAUzB,IAChB,OACI,oCACI,kBAACkI,EAAA,EAAD,CAAK9H,QAAQ,OAAOG,WAAW,SAASD,eAAe,SAAS8B,UAAWX,EAAQvB,MAC/E,kBAACyG,EAAD,Q,yCCJV3G,GAAYC,aAAW,SAAC0C,GAAD,MAAY,CACrCzC,KAAM,CACFgB,SAAU,GAEdiH,WAAY,CACRC,YAAazF,EAAMyB,QAAQ,IAE/BiE,MAAO,CACHnH,SAAU,GAEdoH,KAAM,CACFC,eAAgB,QAEpBC,KAAM,CACF9H,MAAO,eAIA,SAAS+H,KACpB,IAAMhH,EAAUzB,KAEhB,OACI,kBAAC,KAAD,KACI,yBAAKoC,UAAWX,EAAQvB,MACpB,kBAACwI,EAAA,EAAD,CAAQrC,SAAS,SAAS3F,MAAM,WAC5B,kBAACiI,EAAA,EAAD,KACI,kBAAC,KAAD,CAAaC,KAAK,QAAQxG,UAAWX,EAAQ0G,WAAYzH,MAAM,cAC/D,kBAAC4B,EAAA,EAAD,CAAYH,QAAQ,KAAKC,UAAWX,EAAQ4G,OAA5C,eAGA,kBAAC,KAAD,CAAMQ,GAAG,eAAezG,UAAWX,EAAQ6G,MACvC,kBAAC/B,EAAA,EAAD,CAAQnE,UAAWX,EAAQ+G,MAA3B,SAEJ,kBAAC,KAAD,CAAMK,GAAG,QAAQzG,UAAWX,EAAQ6G,MAChC,kBAAC/B,EAAA,EAAD,CAAQnE,UAAWX,EAAQ+G,MAA3B,aAKhB,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOM,KAAK,UACR,kBAAC,EAAD,OAEJ,kBAAC,KAAD,CAAOC,OAAK,EAACD,KAAK,gBACd,kBAACb,GAAD,SC5CLe,OARf,WACE,OACE,6BACE,kBAACP,GAAD,Q,4BCDA9F,GAAQsG,aAAe,CACzBC,QAAS,CACLC,QAAS,CACLzH,KAAM,WAEV0H,UAAW,CACP1H,KAAM,WAEV2H,QAAS,CACL3H,KAAM,WAEV8G,KAAM,CACF9G,KAAM,cAKlB4H,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAACC,GAAA,EAAD,CAAe9G,MAAOA,IAClB,kBAAC,GAAD,QAGR+G,SAASC,eAAe,U","file":"static/js/main.14955113.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Abount() {\r\n    return (\r\n        <div>\r\n            ABOUT\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Card, CardContent, Typography, makeStyles, Grid } from '@material-ui/core';\r\nimport icons from '../icons/icons.json';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n        backgroundColor: '#4a148c',\r\n        color: '#FFFFFF'\r\n    },\r\n    content: {\r\n        width: '75%'\r\n    },\r\n    icon: {\r\n        fontSize: 45,\r\n        marginTop: '25px',\r\n        marginBottom: '25px'\r\n    },\r\n    container: {\r\n        flexGrow: 1\r\n    },\r\n    description: {\r\n        textTransform: 'capitalize'\r\n    }\r\n});\r\n\r\nexport default function BigWeatherCard ({ country, city, weather }) {\r\n    \r\n    const classes = useStyles();\r\n    const { main: { humidity, temp, temp_max, temp_min, feels_like }  = {}, weather: [{ description, icon }] = [] } = weather || {};\r\n    const iconClass = (icons[icon] || {}).icon;\r\n    \r\n    return (\r\n        <Card variant=\"outlined\" className={classes.root}>\r\n            <CardContent className={classes.content}>\r\n                <Typography variant=\"h4\" component=\"h2\">\r\n                    {city} / {country}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h3\">\r\n                    {temp}°\r\n                </Typography>\r\n                <Typography color=\"inherit\">\r\n                    <i className={`wi ${iconClass} ${classes.icon}`}></i>\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                    {temp_max}° | {temp_min}°\r\n                </Typography>\r\n                <Typography className={classes.description}>\r\n                    {description}\r\n                </Typography>\r\n                <Grid container className={classes.container}>\r\n                    <Grid item xs={6}>\r\n                        <Typography>\r\n                            Humidity: {humidity}%\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Typography>\r\n                            Feels Like: {feels_like}°\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card> \r\n    );\r\n}","import React from 'react';\r\nimport { Card, CardContent, Typography, makeStyles } from '@material-ui/core';\r\nimport icons from '../icons/icons.json';\r\nimport dateFormat from 'dateformat'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        minWidth: 135,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n        backgroundColor: '#4a148c',\r\n        color: '#FFFFFF'\r\n    },\r\n    icon: {\r\n        fontSize: 25\r\n    },\r\n    days: {\r\n        fontWeight: 'bold'\r\n    },\r\n    description: {\r\n        textTransform: 'capitalize'\r\n    }\r\n}))\r\n\r\nexport default function WeatherCard ({ weather }) {\r\n\r\n    const { dt_txt, main: { temp } = {}, weather: [{ description, icon }] = [] } = weather || {};\r\n    const classes = useStyles();\r\n    const iconClass = (icons[icon] || {}).icon;\r\n    const day = dateFormat(dt_txt, \"dddd\");\r\n\r\n    return (\r\n        <Card color=\"secondary\">\r\n            <CardContent className={classes.root}>\r\n                <Typography className={classes.days}>\r\n                    {day}\r\n                </Typography>\r\n                <Typography color=\"inherit\">\r\n                    <i className={`wi ${iconClass} ${classes.icon}`}></i>\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h4\">\r\n                    {temp}° \r\n                </Typography>\r\n                <Typography className={classes.description}>\r\n                    {description}\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}","import React from 'react';\r\nimport { Grid, makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport BigWeatherCard from './BigWeatherCard';\r\nimport WeatherCard from './WeatherCard';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    size: 3\r\n}));\r\n\r\nexport default function ViewCard({ data }) {\r\n\r\n    const classes = useStyles();\r\n    const isActive = useMediaQuery('(max-width: 665px)');\r\n    isActive ? classes.size = 6 : classes.size = 3;\r\n    const { city: { country = '', name = '' } = {} } = data || {}\r\n    let weatherArray;\r\n\r\n    if (data) {\r\n        const parsedData = Array.from(new Set(data.list.map(item => item.dt_txt.substring(0, 10))))\r\n            .map(date => {\r\n                return data.list.find(item => item.dt_txt.substring(0, 10) === date);\r\n            });\r\n        if (parsedData.length > 4) {\r\n            parsedData.pop();\r\n        }\r\n        weatherArray = parsedData;\r\n    }\r\n\r\n    return (\r\n        <Grid container className={classes.root} spacing={1}>\r\n            {weatherArray ? weatherArray.map((elem, index) => {\r\n                return index === 0 ?\r\n                    <Grid item xs={12} key={index}>\r\n                        <BigWeatherCard\r\n                            city={name}\r\n                            country={country}\r\n                            weather={elem}\r\n                        />\r\n                    </Grid>\r\n                    :\r\n                    <Grid item xs={classes.size} key={index}>\r\n                        <WeatherCard\r\n                            weather={elem}\r\n                        />\r\n                    </Grid>\r\n            })\r\n                :\r\n                <div></div>\r\n            }\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport { DialogTitle, Dialog, DialogContent, DialogContentText, makeStyles } from '@material-ui/core';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    header: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#D45659'\r\n    }\r\n}))\r\n\r\nexport default function ErrorModal({ open, onClose }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleClose = () => {\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={open}>\r\n            <DialogTitle className={classes.header}>\r\n                <WarningIcon fontSize=\"large\" />\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    An error has occured. We were unable to find the city.\r\n                </DialogContentText>\r\n                <DialogContentText>\r\n                    Pleaste try another name.\r\n                </DialogContentText>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}","import React, { useRef} from 'react';\r\nimport { FormControl, InputLabel, Input, InputAdornment, FormHelperText, Button, TextField } from '@material-ui/core';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\n\r\nconst formStyle = {\r\n    width: '100%'\r\n}\r\n\r\nexport default function Form({ setCity }) {\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    const handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        const [ { value } ] = inputRef.current.childNodes;\r\n        setCity(value);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <FormControl style={formStyle}>\r\n                <InputLabel htmlFor=\"my-input\">City name</InputLabel>\r\n                <Input\r\n                    id=\"my-input\"\r\n                    aria-describedby=\"my-helper-text\"\r\n                    color=\"secondary\"\r\n                    ref={inputRef}\r\n                    endAdornment={\r\n                        <InputAdornment position=\"start\">\r\n                            <RoomIcon />\r\n                        </InputAdornment>\r\n                    } />\r\n                <FormHelperText id=\"my-helper-text\">Ej: New York</FormHelperText>\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">Search</Button>\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport ViewCard from './ViewCard';\r\nimport ErrorModal from './ErrorModal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport Form from './Form';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 741\r\n    },\r\n    spinner: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n\r\nexport default function HomePage() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [city, setCity] = useState();\r\n    const [data, setData] = useState();\r\n    const [showSpinner, setShowSpinner] = useState(false);\r\n    const [error, setError] = useState(false);\r\n    const [open, setOpen] = useState(false);\r\n    const API_KEY = '211b593884e17ba50a9c07162cafe2b7';\r\n    const HOST = 'https://api.openweathermap.org';\r\n    \r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log('render');\r\n    })\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            try {\r\n                setShowSpinner(true);\r\n                const URL = `${HOST}/data/2.5/forecast?q=${city}&units=metric&appid=${API_KEY}`;\r\n                const fetchedData = await axios.get(URL);\r\n                setData(fetchedData.data);\r\n                setError(false);\r\n            } catch (err) {\r\n                setError(true);\r\n                setOpen(true);\r\n            } finally {\r\n                setShowSpinner(false);\r\n                setCity('');\r\n            }\r\n        }\r\n        if (city) {\r\n            fetchData();\r\n        }\r\n    }, [city]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                    <Form setCity={setCity} />\r\n                </Grid>\r\n                {showSpinner ?\r\n                    <Grid item xs={12} className={classes.spinner}>\r\n                        <CircularProgress color=\"primary\" />\r\n                    </Grid>\r\n                    : error ?\r\n                        <ErrorModal\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                        />\r\n                        :\r\n                        <ViewCard\r\n                            data={data}\r\n                            classes={classes} />\r\n                }\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport HomePage from './HomePage';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: '8px'\r\n    }\r\n}));\r\n\r\nexport default function Body() {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" className={classes.root}>\r\n                <HomePage />\r\n            </Box>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles, AppBar, Toolbar, Typography, Button } from '@material-ui/core';\r\nimport About from './About';\r\nimport Body from './Body';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    link: {\r\n        textDecoration: 'none'\r\n    },\r\n    font: {\r\n        color: '#FFFFFF'\r\n    }\r\n}));\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Router>\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\" color=\"primary\">\r\n                    <Toolbar>\r\n                        <WbSunnyIcon edge=\"start\" className={classes.menuButton} color=\"secondary\" />\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            Weather App\r\n                        </Typography>\r\n                        <Link to=\"/weather-app\" className={classes.link}>\r\n                            <Button className={classes.font}>HOME</Button>\r\n                        </Link>\r\n                        <Link to=\"about\" className={classes.link}>\r\n                            <Button className={classes.font}>ABOUT</Button>\r\n                        </Link>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n            <Switch>\r\n                <Route path=\"/about\">\r\n                    <About/>\r\n                </Route>\r\n                <Route exact path=\"/weather-app\">\r\n                    <Body/>\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}","import React from 'react';\r\nimport 'weather-icons/css/weather-icons.css'\r\nimport Header from './Components/Header';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Header/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#4a148c'\r\n        },\r\n        secondary: {\r\n            main: '#ef534e'\r\n        },\r\n        default: {\r\n            main: '#E133D8'\r\n        },\r\n        font: {\r\n            main: \"#FFFFFF\"\r\n        }\r\n    },\r\n});\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <ThemeProvider theme={theme}>\r\n            <App />\r\n        </ThemeProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}