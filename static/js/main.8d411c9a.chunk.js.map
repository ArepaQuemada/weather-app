{"version":3,"sources":["Components/About.js","Components/BigWeatherCard.js","Components/WeatherCard.js","Components/ViewCard.js","Components/ErrorModal.js","Components/Form.js","api/api.js","Components/HomePage.js","Components/Body.js","Components/ListWeather.js","Components/DayPage.js","Components/Header.js","App.js","index.js"],"names":["containerStyles","textAlign","display","flexDirection","justifyContent","height","About","Container","maxWidth","style","Typography","variant","useStyles","makeStyles","root","minWidth","alignItems","backgroundColor","color","opacity","content","width","icon","fontSize","marginTop","marginBottom","container","flexGrow","description","textTransform","BigWeatherCard","country","city","weather","classes","main","humidity","temp","temp_max","temp_min","feels_like","iconClass","icons","Card","className","CardContent","component","Grid","item","xs","theme","days","fontWeight","WeatherCard","dt_txt","day","dateFormat","size","link","textDecoration","ViewCard","isActive","useMediaQuery","weatherArray","useContext","DataContext","data","name","require","list","filter","index","spacing","map","elem","key","to","pathname","id","state","date","header","ErrorModal","open","onClose","Dialog","DialogTitle","DialogContent","DialogContentText","formStyle","Form","setCity","inputRef","useRef","onSubmit","ev","preventDefault","value","current","childNodes","FormControl","InputLabel","htmlFor","Input","aria-describedby","ref","endAdornment","InputAdornment","position","FormHelperText","Button","type","API_KEY","HOST","setShowSpinner","setError","setData","setOpen","closeSpinner","a","URL","axios","get","fetchedData","spinner","HomePage","useState","showSpinner","error","useEffect","getWeather","justify","CircularProgress","margin","Body","Box","heading","flexBasis","flexShrink","secondaryHeading","summary","ListWeather","Accordion","AccordionSummary","AccordionDetails","DayPage","useLocation","menuButton","marginRight","title","font","Header","basename","AppBar","Toolbar","edge","exact","path","React","createContext","App","Provider","createMuiTheme","palette","primary","secondary","default","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.8d411c9a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container, Typography } from '@material-ui/core';\r\n\r\nconst containerStyles = {\r\n    textAlign: 'center',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    height: '80vh'\r\n}\r\n\r\nexport default function About() {\r\n    return (\r\n        <Container maxWidth=\"sm\" style={containerStyles}>\r\n\r\n            <Typography variant=\"h4\">\r\n                WELCOME\r\n            </Typography>\r\n            <Typography>\r\n                This is a project that I made to learn basic stuff about React, react-router and Material-UI\r\n                (Basically I made this about page to practice some features from react-router).\r\n                        </Typography>\r\n            <Typography>\r\n                Anyway, since I don't really know what else to put in here I'll just thank you for taking the time to read through this\r\n                        </Typography>\r\n            <Typography>\r\n                Thanks, again, for stoping by :)\r\n            </Typography>\r\n\r\n        </Container>\r\n    )\r\n}","import React from 'react';\r\nimport { Card, CardContent, Typography, makeStyles, Grid } from '@material-ui/core';\r\nimport icons from '../icons/icons.json';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n        backgroundColor: '#4a148c',\r\n        color: '#FFFFFF',\r\n        opacity: \"0.7\",\r\n        '&:hover': {\r\n            opacity: '0.8'\r\n        }\r\n    },\r\n    content: {\r\n        width: '75%'\r\n    },\r\n    icon: {\r\n        fontSize: 45,\r\n        marginTop: '25px',\r\n        marginBottom: '25px'\r\n    },\r\n    container: {\r\n        flexGrow: 1\r\n    },\r\n    description: {\r\n        textTransform: 'capitalize'\r\n    }\r\n});\r\n\r\nexport default function BigWeatherCard ({ country, city, weather }) {\r\n    \r\n    const classes = useStyles();\r\n    const { main: { humidity, temp, temp_max, temp_min, feels_like }  = {}, weather: [{ description, icon }] = [] } = weather || {};\r\n    const iconClass = (icons[icon] || {}).icon;\r\n    \r\n    return (\r\n        <Card variant=\"outlined\" className={classes.root}>\r\n            <CardContent className={classes.content}>\r\n                <Typography variant=\"h4\" component=\"h2\">\r\n                    {city} / {country}\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h3\">\r\n                    {temp}°\r\n                </Typography>\r\n                <Typography color=\"inherit\">\r\n                    <i className={`wi ${iconClass} ${classes.icon}`}></i>\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                    {temp_max}° | {temp_min}°\r\n                </Typography>\r\n                <Typography className={classes.description}>\r\n                    {description}\r\n                </Typography>\r\n                <Grid container className={classes.container}>\r\n                    <Grid item xs={6}>\r\n                        <Typography>\r\n                            Humidity: {humidity}%\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Typography>\r\n                            Feels Like: {feels_like}°\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card> \r\n    );\r\n}","import React from 'react';\r\nimport { Card, CardContent, Typography, makeStyles } from '@material-ui/core';\r\nimport icons from '../icons/icons.json';\r\nimport dateFormat from 'dateformat'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        minWidth: 135,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n        backgroundColor: '#4a148c',\r\n        color: '#FFFFFF',\r\n        opacity: \"0.7\",        \r\n        '&:hover': {\r\n            opacity: '0.8'\r\n        }\r\n    },\r\n    icon: {\r\n        fontSize: 25\r\n    },\r\n    days: {\r\n        fontWeight: 'bold'\r\n    },\r\n    description: {\r\n        textTransform: 'capitalize'\r\n    }\r\n}))\r\n\r\nexport default function WeatherCard ({ weather }) {\r\n\r\n    const { dt_txt, main: { temp } = {}, weather: [{ description, icon }] = [] } = weather || {};\r\n    const classes = useStyles();\r\n    const iconClass = (icons[icon] || {}).icon;\r\n    const day = dateFormat(dt_txt, \"dddd\");\r\n\r\n    return (\r\n        <Card color=\"secondary\" className={classes.root}>\r\n            <CardContent>\r\n                <Typography className={classes.days}>\r\n                    {day}\r\n                </Typography>\r\n                <Typography color=\"inherit\">\r\n                    <i className={`wi ${iconClass} ${classes.icon}`}></i>\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h4\">\r\n                    {temp}° \r\n                </Typography>\r\n                <Typography className={classes.description}>\r\n                    {description}\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}","import React, { useContext } from 'react';\r\nimport { Grid, makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport BigWeatherCard from './BigWeatherCard';\r\nimport WeatherCard from './WeatherCard';\r\nimport { Link } from 'react-router-dom';\r\nimport { DataContext } from '../App';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1\r\n    },\r\n    size: 3,\r\n    link: {\r\n        textDecoration: 'none'\r\n    }\r\n}));\r\n\r\nexport default function ViewCard() {\r\n\r\n    const classes = useStyles();\r\n    const isActive = useMediaQuery('(max-width: 665px)');\r\n    isActive ? classes.size = 6 : classes.size = 3;\r\n    const [ data ] = useContext(DataContext);\r\n    const { city: { country = '', name = '' } = {} } = data || {}\r\n    let weatherArray;\r\n    let dateFormat = require('dateformat');\r\n    \r\n    if (data) {\r\n        weatherArray = data.list.filter((item, index) => {\r\n            if (index === 0) {\r\n                return item;\r\n            } else {\r\n                const hour = dateFormat(item.dt_txt, 'h:MM:ss TT');\r\n                return hour === '3:00:00 PM'\r\n            }\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Grid container className={classes.root} spacing={1}>\r\n            {weatherArray ? weatherArray.map((elem, index) => {\r\n                return index === 0 ?\r\n                    <Grid item xs={12} key={index}>\r\n                        <Link className={classes.link} to={\r\n                            {\r\n                                pathname: `/${data.city.id}`,\r\n                                state: {\r\n                                    date: elem.dt_txt\r\n                                }\r\n                            }}>\r\n                            <BigWeatherCard\r\n                                city={name}\r\n                                country={country}\r\n                                weather={elem}\r\n                            />\r\n                        </Link>\r\n                    </Grid>\r\n                    :\r\n                    <Grid item xs={classes.size} key={index}>\r\n                        <Link className={classes.link} to={\r\n                            {\r\n                                pathname: `/${data.city.id}`,\r\n                                state: {\r\n                                    date: elem.dt_txt\r\n                                }\r\n                            }}>\r\n                            <WeatherCard\r\n                                weather={elem}\r\n                            />\r\n                        </Link>\r\n                    </Grid>\r\n            })\r\n                :\r\n                <div></div>\r\n            }\r\n        </Grid>\r\n    );\r\n}","import React from 'react';\r\nimport { DialogTitle, Dialog, DialogContent, DialogContentText, makeStyles } from '@material-ui/core';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    header: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        backgroundColor: '#D45659'\r\n    }\r\n}))\r\n\r\nexport default function ErrorModal({ open, onClose }) {\r\n\r\n    const classes = useStyles();\r\n\r\n    const handleClose = () => {\r\n        onClose();\r\n    }\r\n\r\n    return (\r\n        <Dialog onClose={handleClose} open={open}>\r\n            <DialogTitle className={classes.header}>\r\n                <WarningIcon fontSize=\"large\" />\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    An error has occured. We were unable to find the city.\r\n                </DialogContentText>\r\n                <DialogContentText>\r\n                    Pleaste try another name.\r\n                </DialogContentText>\r\n            </DialogContent>\r\n        </Dialog>\r\n    )\r\n}","import React, { useRef} from 'react';\r\nimport { FormControl, InputLabel, Input, InputAdornment, FormHelperText, Button } from '@material-ui/core';\r\nimport RoomIcon from '@material-ui/icons/Room';\r\n\r\nconst formStyle = {\r\n    width: '100%'\r\n}\r\n\r\nexport default function Form({ setCity }) {\r\n\r\n    const inputRef = useRef(null);\r\n\r\n    const handleSubmit = (ev) => {\r\n        ev.preventDefault();\r\n        const [ { value } ] = inputRef.current.childNodes;\r\n        setCity(value);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <FormControl style={formStyle}>\r\n                <InputLabel htmlFor=\"my-input\">City name</InputLabel>\r\n                <Input\r\n                    id=\"my-input\"\r\n                    aria-describedby=\"my-helper-text\"\r\n                    color=\"secondary\"\r\n                    ref={inputRef}\r\n                    endAdornment={\r\n                        <InputAdornment position=\"start\">\r\n                            <RoomIcon />\r\n                        </InputAdornment>\r\n                    } />\r\n                <FormHelperText id=\"my-helper-text\">Ej: New York</FormHelperText>\r\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\">Search</Button>\r\n            </FormControl>\r\n        </form>\r\n    );\r\n}","import axios from 'axios';\r\n\r\nconst API_KEY = '211b593884e17ba50a9c07162cafe2b7';\r\nconst HOST = 'https://api.openweathermap.org';\r\n\r\nexport async function getWeather(city, setShowSpinner, setError, setData, setOpen, closeSpinner) {\r\n    try {\r\n        setShowSpinner(true);\r\n        const URL = `${HOST}/data/2.5/forecast?q=${city}&units=metric&appid=${API_KEY}`;\r\n        const fetchedData = await axios.get(URL);\r\n        setData(fetchedData.data);\r\n        setError(false);\r\n    } catch (err) {\r\n        setError(true);\r\n        setOpen(true);\r\n    } finally {\r\n        setShowSpinner(false);\r\n    }\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport ViewCard from './ViewCard';\r\nimport ErrorModal from './ErrorModal';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport Form from './Form';\r\nimport { getWeather } from '../api/api';\r\nimport { DataContext } from '../App';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        maxWidth: 741,\r\n        textDecoration: 'none'\r\n    },\r\n    spinner: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    }\r\n}));\r\n\r\nexport default function HomePage() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [ data, setData ] = useContext(DataContext);\r\n    const [ city, setCity ] = useState();\r\n    const [ showSpinner, setShowSpinner ] = useState(false);\r\n    const [ error, setError ] = useState(false);\r\n    const [ open, setOpen ] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (city) {\r\n            getWeather(city, setShowSpinner, setError, setData, setOpen);\r\n        }\r\n    }, [ city, setData ]);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={1} justify=\"center\" alignItems=\"center\">\r\n                <Grid item xs={12}>\r\n                    <Form setCity={setCity} />\r\n                </Grid>\r\n                {showSpinner ?\r\n                    <Grid item xs={12} className={classes.spinner}>\r\n                        <CircularProgress color=\"primary\" />\r\n                    </Grid> : <div></div> \r\n                }             \r\n                {error ?\r\n                    <ErrorModal\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                    /> : <div></div>\r\n                } \r\n                {data && !showSpinner ? \r\n                   <ViewCard\r\n                    data={data}\r\n                    classes={classes} /> : <div></div>\r\n                }\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport HomePage from './HomePage';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: '8px'\r\n    }\r\n}));\r\n\r\nexport default function Body() {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" className={classes.root}>\r\n                <HomePage />\r\n            </Box>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Typography, makeStyles } from '@material-ui/core';\r\nimport dateFormat from 'dateformat'\r\nimport icons from '../icons/icons.json';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      opacity: '0.4',\r\n      '&:hover': {\r\n          opacity: '0.5'\r\n      }\r\n    },\r\n    heading: {\r\n      flexBasis: '13.33%',\r\n      flexShrink: 0\r\n    },\r\n    secondaryHeading: {\r\n        fontWeight: 'bold'\r\n    },\r\n    icon: {\r\n        fontSize: 25\r\n    },\r\n    summary: {\r\n      color: '#000000'\r\n    }\r\n  }));\r\n\r\nexport default function ListWeather({ weather }) {\r\n\r\n    const classes = useStyles();\r\n    const { dt_txt, main: { temp, humidity } = {}, weather: [{ description, icon, main }] = [] } = weather || {};\r\n    const iconClass = (icons[icon] || {}).icon;\r\n    return (\r\n        <>\r\n            <Accordion className={classes.root}>\r\n                <AccordionSummary className={classes.summary}>\r\n                    <Typography className={classes.heading}>{dateFormat(dt_txt, 'hh TT')}</Typography>\r\n                    <Typography className={`${classes.heading} ${classes.secondaryHeading}`}>{temp}°</Typography>\r\n                    <Typography className={classes.heading} color=\"inherit\">\r\n                        <i className={`wi ${iconClass} ${classes.icon}`}></i>\r\n                    </Typography>\r\n                    <Typography className={classes.heading}>\r\n                        {main}\r\n                    </Typography>\r\n                    <Typography>\r\n                        <i className={`wi wi-humidity`}></i>\r\n                        {humidity}%\r\n                    </Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                    <Typography>Details</Typography>\r\n                </AccordionDetails>\r\n            </Accordion>\r\n        </>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport dateFormat from 'dateformat';\r\nimport ListWeather from './ListWeather';\r\nimport { DataContext } from '../App';\r\n\r\nexport default function DayPage() {\r\n\r\n    const [data] = useContext(DataContext);\r\n    const location = useLocation();\r\n    const { date } = location.state;\r\n    const day = dateFormat(date, 'dddd');\r\n\r\n    if (data) {\r\n        const weatherArray = data.list.filter(elem => {\r\n            const dayOfWeek = dateFormat(elem.dt_txt, 'dddd');\r\n            return dayOfWeek === day;\r\n        });\r\n\r\n        return (\r\n            <>\r\n                {weatherArray.map((elem, index) => {\r\n                    return (\r\n                        <ListWeather key={index}\r\n                            weather={elem}\r\n                        />\r\n                    )\r\n                })}\r\n            </>\r\n        )\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { makeStyles, AppBar, Toolbar, Typography, Button } from '@material-ui/core';\r\nimport About from './About';\r\nimport Body from './Body';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport DayPage from './DayPage';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n    link: {\r\n        textDecoration: 'none'\r\n    },\r\n    font: {\r\n        color: '#FFFFFF'\r\n    }\r\n}));\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Router basename=\"/weather-app\">\r\n            <div className={classes.root}>\r\n                <AppBar position=\"static\" color=\"primary\">\r\n                    <Toolbar>\r\n                        <WbSunnyIcon edge=\"start\" className={classes.menuButton} color=\"secondary\" />\r\n                        <Typography variant=\"h6\" className={classes.title}>\r\n                            Weather App\r\n                        </Typography>\r\n                        <Link to=\"/\" className={classes.link}>\r\n                            <Button className={classes.font}>HOME</Button>\r\n                        </Link>\r\n                        <Link to=\"/about\" className={classes.link}>\r\n                            <Button className={classes.font}>ABOUT</Button>\r\n                        </Link>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </div>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={Body} />\r\n                <Route path=\"/about\" component={About} />\r\n                <Route path=\"/:id\" component={DayPage} />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport 'weather-icons/css/weather-icons.css'\r\nimport Header from './Components/Header';\r\n\r\nexport const DataContext = React.createContext('');\r\n\r\nfunction App() {\r\n  \r\n  const [data, setData] = useState('');\r\n  \r\n  return (\r\n    <div>\r\n      <DataContext.Provider value={[ data, setData ]}>\r\n        <Header />\r\n      </DataContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#4a148c'\r\n        },\r\n        secondary: {\r\n            main: '#ef534e'\r\n        },\r\n        default: {\r\n            main: '#E133D8'\r\n        },\r\n        font: {\r\n            main: \"#FFFFFF\"\r\n        }\r\n    },\r\n});\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <ThemeProvider theme={theme}>\r\n            <App />\r\n        </ThemeProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}